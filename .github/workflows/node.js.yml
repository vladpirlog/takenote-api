name: Node.js CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-test:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Redis Server in GitHub Actions
        uses: supercharge/redis-github-action@1.1.0
      - name: Install ffmpeg
        run: sudo apt-get install ffmpeg -y
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test
        env:
          MONGODB_TESTING_URI: ${{ secrets.MONGODB_TESTING_URI }}
          CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
          CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
          CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
          AUTH_JWT_SECRET: ${{ secrets.AUTH_JWT_SECRET }}
          EMAIL_USER: ${{ secrets.EMAIL_USER }}
          EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
          EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
          EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
          MOESIF_API_KEY: ${{ secrets.MOESIF_API_KEY }}

  deploy:

    runs-on: ubuntu-latest
  
    needs: build-and-test

    steps:
      - name: deploying changes to remote server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOYMENT_HOST }}
          username: ${{ secrets.DEPLOYMENT_USERNAME }}
          key: ${{ secrets.DEPLOYMENT_KEY }}
          script: sh ~/scripts/deploy.sh
